{"remainingRequest":"C:\\Users\\Admin\\Desktop\\iceWk-vue-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Admin\\Desktop\\iceWk-vue-master\\src\\page\\Home.vue?vue&type=template&id=1c369514&scoped=true&","dependencies":[{"path":"C:\\Users\\Admin\\Desktop\\iceWk-vue-master\\src\\page\\Home.vue","mtime":1645799910000},{"path":"C:\\Users\\Admin\\Desktop\\iceWk-vue-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\Desktop\\iceWk-vue-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\Desktop\\iceWk-vue-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\Desktop\\iceWk-vue-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:
<div class="home">
  <div id="__nuxt">
    <!---->
    <div id="__layout">
      <div data-fetch-key="0" class="app light macwk-animation">
        <header class="app-header" data-v-7cf0e7dc="">
          <div
            class="app-header-navbar white shadow-4 border-bottom pc-model"
            data-v-122eae44=""
            data-v-7cf0e7dc=""
          >
            <div class="app-header-main" data-v-122eae44="">
              <a
                href="https://macwk.com/"
                class="app-header-logo active"
                data-v-122eae44=""
                aria-current="page"
              >
                <svg
                  id="macwk-svg-logo"
                  width="32"
                  height="32"
                  xmlns="http://www.w3.org/2000/svg"
                  data-v-6dd0b122=""
                  data-v-122eae44=""
                >
                  <title data-v-6dd0b122="">MacWK</title>
                  <defs data-v-6dd0b122="">
                    <linearGradient
                      x1="50%"
                      y1="0%"
                      x2="50%"
                      y2="100%"
                      id="a"
                      data-v-6dd0b122=""
                    >
                      <stop
                        offset="0%"
                        class="stop-color-circle"
                        data-v-6dd0b122=""
                      ></stop>
                      <stop
                        offset="100%"
                        class="stop-color-circle"
                        data-v-6dd0b122=""
                      ></stop>
                    </linearGradient>
                    <linearGradient
                      x1="100%"
                      y1="86.198%"
                      x2="-14.813%"
                      y2="-4.357%"
                      id="b"
                      data-v-6dd0b122=""
                    >
                      <stop
                        offset="0%"
                        class="stop-color-default"
                        data-v-6dd0b122=""
                      ></stop>
                      <stop
                        offset="40.927%"
                        class="stop-color-default"
                        data-v-6dd0b122=""
                      ></stop>
                      <stop
                        offset="100%"
                        class="stop-color-default"
                        data-v-6dd0b122=""
                      ></stop>
                    </linearGradient>
                    <linearGradient
                      x1="86.515%"
                      y1="24.533%"
                      x2="0%"
                      y2="24.533%"
                      id="c"
                      data-v-6dd0b122=""
                    >
                      <stop
                        stop-opacity="0"
                        offset="0%"
                        class="stop-color-default"
                        data-v-6dd0b122=""
                      ></stop>
                      <stop
                        offset="100%"
                        class="stop-color-default-linearGradient"
                        data-v-6dd0b122=""
                      ></stop>
                    </linearGradient>
                  </defs>
                  <g fill="none" fill-rule="evenodd" data-v-6dd0b122="">
                    <path
                      d="M29.952 16c0-1.933-1.562-3.5-3.488-3.5a3.494 3.494 0 0 0-3.488 3.5c0 1.933 1.561 3.5 3.488 3.5a3.494 3.494 0 0 0 3.488-3.5"
                      fill="url(#a)"
                      data-v-6dd0b122=""
                    ></path>
                    <path
                      d="M25.865 25.9a13.932 13.932 0 0 1-6.377 3.66c-1.115.286-2.284.44-3.488.44a13.893 13.893 0 0 1-10.512-4.797A13.968 13.968 0 0 1 2.048 16c0-3.523 1.298-6.742 3.44-9.203A13.893 13.893 0 0 1 16 2c1.204 0 2.373.154 3.488.44a13.932 13.932 0 0 1 6.377 3.66l-4.933 4.95A6.942 6.942 0 0 0 16 9c-3.852 0-6.976 3.134-6.976 7l.002.18C9.122 19.964 12.208 23 16 23c1.926 0 3.67-.784 4.932-2.05l4.933 4.95z"
                      fill="url(#b)"
                      data-v-6dd0b122=""
                    ></path>
                    <path
                      d="M20.932 11.05A6.942 6.942 0 0 0 16 9c-3.852 0-6.976 3.134-6.976 7a13.98 13.98 0 0 1 4.087-9.9 13.932 13.932 0 0 1 6.377-3.66l1.444 8.61z"
                      fill="url(#c)"
                      data-v-6dd0b122=""
                    ></path>
                  </g>
                </svg>
                <span data-v-122eae44="">MacWk</span></a
              >
              <div class="app-header-nav nav" data-v-122eae44="">
                <router-link
                  target="_self"
                  class="nav-link active"
                  data-v-122eae44=""
                  aria-current="page"
                  to="/"
                  >首页</router-link
                >
                <router-link
                  target="_self"
                  class="nav-link"
                  data-v-1f33282a=""
                  to="list"
                  >软件</router-link
                >
                <router-link
                  target="_self"
                  class="nav-link"
                  data-v-122eae44=""
                  to="post/all"
                  >文章</router-link
                >
                <router-link
                  target="_self"
                  class="nav-link"
                  data-v-1f33282a=""
                  to="post"
                  >专题</router-link
                >
                <router-link
                  target="_self"
                  class="nav-link"
                  data-v-1f33282a=""
                  to="post"
                  >榜单</router-link
                >
              </div>
              <div
                class="app-header-search grid-list lazy-transition"
                data-v-122eae44=""
              >
                <div id="autosuggest" data-v-122eae44="">
                  <div
                    role="combobox"
                    aria-expanded="false"
                    aria-haspopup="listbox"
                    aria-owns="autosuggest-autosuggest__results"
                  >
                    <input
                      type="text"
                      autocomplete="off"
                      aria-autocomplete="list"
                      aria-activedescendant=""
                      aria-controls="autosuggest-autosuggest__results"
                      id="autosuggest__input"
                      placeholder="输入关键词搜索软件或文章…"
                      value=""
                      class=""
                    />
                  </div>
                  <!---->
                  <button class="btn search-to" data-v-122eae44="">
                    <i class="icon-search" data-v-122eae44=""></i>
                  </button>
                  <div
                    id="autosuggest-autosuggest__results"
                    class="autosuggest__results-container"
                  >
                    <!---->
                  </div>
                </div>
              </div>
              <div class="app-header-user" data-v-122eae44="">
                <a
                  href="https://macwk.com/reward"
                  class="d-flex align-items-center"
                  data-v-122eae44=""
                  ><span
                    class="avatar avatar-36 reward-svg mr-3"
                    data-v-122eae44=""
                  >
                    <svg
                      t="1592901810160"
                      viewBox="0 0 1024 1024"
                      version="1.1"
                      xmlns="http://www.w3.org/2000/svg"
                      p-id="1738"
                      width="36"
                      height="36"
                      class="icon"
                      data-v-1f33282a=""
                    >
                      <path
                        d="M512 992c-247.424 0-448-92.736-448-297.344C64 490.016 264.576 224 512 224s448 266.016 448 470.656C960 899.264 759.424 992 512 992z m-125.056-310.528c-23.296 0-34.944 7.712-34.944 23.136 0 15.104 11.648 22.656 34.944 22.656h87.424v19.712c0 33.28 11.2 49.952 33.728 49.952 22.144 0 33.216-16.64 33.216-49.952v-19.712h87.648c23.136 0 34.72-7.552 34.72-22.656 0-15.424-11.584-23.136-34.72-23.136h-87.648v-35.456h87.648c23.136 0 34.72-7.68 34.72-23.136 0-15.104-11.584-22.656-34.72-22.656h-63.264l54.08-92.64c4.448-7.232 7.68-13.216 9.728-17.984 2.048-4.768 3.072-10.016 3.072-15.744a24.544 24.544 0 0 0-7.744-18.336 27.648 27.648 0 0 0-20.064-7.52 30.496 30.496 0 0 0-14.912 3.456c-4.16 2.304-7.68 5.216-10.464 8.736-2.784 3.52-5.664 7.776-8.608 12.8-2.944 4.992-5.76 9.792-8.352 14.4l-54.336 93.12-63.936-97.216c-6.88-11.328-12.928-19.52-18.08-24.64-5.184-5.088-11.968-7.616-20.32-7.616a27.136 27.136 0 0 0-20.064 7.744c-5.184 5.184-7.776 12.032-7.776 20.576 0 4.736 0.928 9.088 2.72 13.024 1.792 3.968 5.664 10.528 11.584 19.712l58.016 88.128h-63.296c-23.296 0-34.944 7.552-34.944 22.656 0 15.424 11.648 23.136 34.944 23.136h87.424v35.456h-87.424z"
                        id="reward-path-1"
                        p-id="1739"
                        data-v-1f33282a=""
                      ></path>
                      <path
                        d="M720 256c30.176-28.608 48-92.032 48-117.952C768 72.224 653.376 32 512 32c-45.824 0-88.832 4.224-126.016 12.16C308.384 60.8 256 93.6 256 138.08c0 25.92 17.824 89.344 48 117.952C352 212.064 437.664 192 512 192c74.336 0 160 20.064 208 64z"
                        id="reward-path-2"
                        p-id="1740"
                        data-v-1f33282a=""
                      ></path>
                    </svg>
                  </span>
                  <span class="l-h-1x d-inline-block" data-v-122eae44=""
                    ><span class="fs-15" data-v-122eae44="">打赏</span></span
                  ></a
                >
              </div>
            </div>
          </div>
        </header>
        <div>
          <section class="layout-index pc-model mt-5">
            <div class="banner-index mb-6">
              <div class="container">
                <div
                  data-v-bffc9160=""
                  class="index-banner el-carousel el-carousel--horizontal"
                >
                  <div class="el-carousel__container" style="height: 400px">
                    <button
                      type="button"
                      class="el-carousel__arrow el-carousel__arrow--left"
                    >
                      <i class="el-icon-arrow-left"></i>
                    </button>
                    <button
                      type="button"
                      class="el-carousel__arrow el-carousel__arrow--right"
                    >
                      <i class="el-icon-arrow-right"></i>
                    </button>
                    <div
                      data-v-bffc9160=""
                      class="el-carousel__item is-animating"
                      style="transform: translateX(-1170px) scale(1)"
                    >
                      <!---->
                      <div
                        data-v-bffc9160=""
                        class="
                          section
                          white
                          h-400
                          position-relative
                          radius-5x
                          d-flex
                          align-items-center
                        "
                      >
                        <div data-v-bffc9160="" class="bg-shape-holder">
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-1.svg"
                            class="shape-three"
                          />
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-55.svg"
                            class="shape-four"
                          />
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-56.svg"
                            class="shape-five"
                          />
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-57.svg"
                            class="shape-six"
                          />
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-58.svg"
                            class="shape-seven"
                          />
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-59.svg"
                            class="shape-eight"
                          />
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-62.svg"
                            class="shape-nine"
                          />
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-61.svg"
                            class="shape-ten"
                          />
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-60.svg"
                            class="shape-eleven"
                          />
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-10.svg"
                            class="shape-10"
                          />
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-11.svg"
                            class="shape-11"
                          />
                        </div>
                        <div
                          data-v-bffc9160=""
                          class="w-600 pl-10 position-relative z-index-9999"
                        >
                          <h2 data-v-bffc9160="">无广告，无后门，安全！</h2>
                          <p data-v-bffc9160="" class="text-muted fs-18">
                            网站无广告，软件无后门，欢迎监督。隐私方面本站无能为力，推荐大家安装防火墙软件禁止应用联网！
                          </p>
                          <a
                            data-v-bffc9160=""
                            href="https://macwk.com/soft/firewall/p1"
                            class="btn btn-theme btn-round px-6"
                            >安装防火墙</a
                          >
                        </div>
                        <div
                          data-v-bffc9160=""
                          class="index-banner-image-one"
                        >
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/banner-safe-free.png"
                          />
                        </div>
                      </div>
                    </div>
                    <div
                      data-v-bffc9160=""
                      class="el-carousel__item is-active is-animating"
                      style="transform: translateX(0px) scale(1)"
                    >
                      <!---->
                      <div
                        data-v-bffc9160=""
                        class="
                          section
                          white
                          h-400
                          position-relative
                          radius-5x
                          d-flex
                          align-items-center
                        "
                      >
                        <div data-v-bffc9160="" class="bg-shape-holder">
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-1.svg"
                            class="shape-three"
                          />
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-55.svg"
                            class="shape-four"
                          />
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-56.svg"
                            class="shape-five"
                          />
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-57.svg"
                            class="shape-six"
                          />
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-58.svg"
                            class="shape-seven"
                          />
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-59.svg"
                            class="shape-eight"
                          />
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-60.svg"
                            class="shape-nine"
                          />
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-61.svg"
                            class="shape-ten"
                          />
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-62.svg"
                            class="shape-eleven"
                          />
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-10.svg"
                            class="shape-10"
                          />
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/shape-11.svg"
                            class="shape-11"
                          />
                          <span
                            data-v-bffc9160=""
                            class="big-round-one"
                          ></span>
                          <span
                            data-v-bffc9160=""
                            class="big-round-two"
                          ></span>
                          <span
                            data-v-bffc9160=""
                            class="big-round-three"
                          ></span>
                        </div>
                        <div
                          data-v-bffc9160=""
                          class="w-600 pl-10 position-relative z-index-9999"
                        >
                          <h2 data-v-bffc9160="">只收录精品Mac应用</h2>
                          <p data-v-bffc9160="" class="text-muted fs-18">
                            每款Mac应用都经过Macwk.com严格测试后发布，确保应用可以和正版软件一样稳定运行使用！
                          </p>
                          <a
                            data-v-bffc9160=""
                            href="https://macwk.com/soft/all/p1"
                            class="btn btn-theme btn-round px-6"
                            >马上下载</a
                          >
                        </div>
                        <div
                          data-v-bffc9160=""
                          class="index-banner-image-two"
                        >
                          <img
                            data-v-bffc9160=""
                            src="https://self-1305088812.cos.ap-nanjing.myqcloud.com/2021/home-banner-carry.png"
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                  <ul
                    class="
                      el-carousel__indicators
                      el-carousel__indicators--horizontal
                      el-carousel__indicators--outside
                    "
                  >
                    <li
                      class="
                        el-carousel__indicator
                        el-carousel__indicator--horizontal
                      "
                    >
                      <button class="el-carousel__button">
                        <!---->
                      </button>
                    </li>
                    <li
                      class="
                        el-carousel__indicator
                        el-carousel__indicator--horizontal
                        is-active
                      "
                    >
                      <button class="el-carousel__button">
                        <!---->
                      </button>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
            <div class="container">
              <div data-v-0a1f67c4="" class="index-special row mb-6">
                <div data-v-0a1f67c4="" class="col-3">
                  <a
                    data-v-0a1f67c4=""
                    href="https://macwk.com/special/novice"
                    class=""
                  >
                    <div
                      data-v-0a1f67c4=""
                      class="
                        macwk-card
                        bg-gradient-green
                        hover-shadow-6
                        py-3
                        text-center
                      "
                      style="
                        will-change: transform;
                        transform: perspective(1000px) rotateX(0deg)
                          rotateY(0deg) scale3d(1, 1, 1);
                      "
                    >
                      <!---->
                      <div
                        class="
                          macwk-card__collapsible-content
                          vs-con-loading__container
                        "
                      >
                        <div class="macwk-card__body">
                          <h6 data-v-0a1f67c4="" class="mb-0 text-white">
                            <i
                              data-v-0a1f67c4=""
                              class="icon-office fs-22 mr-3 v-m-3"
                            ></i>
                            <span data-v-0a1f67c4="">新人必备</span>
                          </h6>
                        </div>
                        <!---->
                      </div>
                    </div>
                  </a>
                </div>
                <div data-v-0a1f67c4="" class="col-3">
                  <a
                    data-v-0a1f67c4=""
                    href="https://macwk.com/special/photo"
                    class=""
                  >
                    <div
                      data-v-0a1f67c4=""
                      class="
                        macwk-card
                        bg-gradient-orange
                        hover-shadow-6
                        py-3
                        text-center
                      "
                    >
                      <!---->
                      <div
                        class="
                          macwk-card__collapsible-content
                          vs-con-loading__container
                        "
                      >
                        <div class="macwk-card__body">
                          <h6 data-v-0a1f67c4="" class="mb-0 text-white">
                            <i
                              data-v-0a1f67c4=""
                              class="icon-gallery fs-22 mr-3 v-m-3"
                            ></i>
                            <span data-v-0a1f67c4="">图像处理工具</span>
                          </h6>
                        </div>
                        <!---->
                      </div>
                    </div>
                  </a>
                </div>
                <div data-v-0a1f67c4="" class="col-3">
                  <a
                    data-v-0a1f67c4=""
                    href="https://macwk.com/special/pm"
                    class=""
                  >
                    <div
                      data-v-0a1f67c4=""
                      class="
                        macwk-card
                        bg-gradient-blue
                        hover-shadow-6
                        py-3
                        text-center
                      "
                    >
                      <!---->
                      <div
                        class="
                          macwk-card__collapsible-content
                          vs-con-loading__container
                        "
                      >
                        <div class="macwk-card__body">
                          <h6 data-v-0a1f67c4="" class="mb-0 text-white">
                            <i
                              data-v-0a1f67c4=""
                              class="icon-cp fs-22 mr-3 v-m-3"
                            ></i>
                            <span data-v-0a1f67c4="">产品经理工具</span>
                          </h6>
                        </div>
                        <!---->
                      </div>
                    </div>
                  </a>
                </div>
                <div data-v-0a1f67c4="" class="col-3">
                  <a
                    data-v-0a1f67c4=""
                    href="https://macwk.com/special"
                    class=""
                  >
                    <div
                      data-v-0a1f67c4=""
                      class="
                        macwk-card
                        bg-gradient-purple
                        hover-shadow-6
                        py-3
                        text-center
                      "
                    >
                      <!---->
                      <div
                        class="
                          macwk-card__collapsible-content
                          vs-con-loading__container
                        "
                      >
                        <div class="macwk-card__body">
                          <h6 data-v-0a1f67c4="" class="mb-0 text-white">
                            <i
                              data-v-0a1f67c4=""
                              class="icon-code fs-22 mr-3 v-m-3"
                            ></i>
                            <span data-v-0a1f67c4="">更多专题</span>
                          </h6>
                        </div>
                        <!---->
                      </div>
                    </div>
                  </a>
                </div>
              </div>
            </div>
            <div class="container mb-5">
              <div class="d-flex app-content-header mb-6">
                <div class="main-title">
                  <h4 class="i-con-h-a mb-0">
                    <i class="mr-1 text-muted i-con i-con-calendar v-m-4"
                      ><i></i
                    ></i>
                    <span>精品软件</span>
                  </h4>
                </div>
                <nav class="nav nav-title flex-grow-1">
                  <a class="nav-link active">新鲜发布</a>
                  <a class="nav-link">热门下载</a>
                  <a class="nav-link">站长推荐</a>
                  <a class="nav-link">最多评论</a>
                </nav>
                <div class="more-action">
                  <a
                    href="https://macwk.com/soft/all/p1"
                    class="btn btn-more active"
                  >
                    更多软件 <i class="icon-arrow-right fw-600 fs-12 v-2"></i
                  ></a>
                </div>
              </div>
              <div
                class="soft-index lazy-transition w-r"
                style="margin-left: -10px; margin-right: -10px"
              >
                <div
                  class="list-animation-leftIn w-c w-c-4 delay-0"
                  style="
                    padding-left: 10px;
                    padding-right: 10px;
                    padding-bottom: 20px;
                  "
                >
                  <a
                    href="https://macwk.com/soft/infuse"
                    target="_self"
                    class="macwk-app border white cursor-pointer mb-0"
                  >
                    <div class="macwk-app__header--icon">
                      <div
                        class="macwk-app__header--icon--content"
                        style="
                          --img: url(https\:\/\/macwk2022\.oss-cn-hongkong\.aliyuncs\.com\/public\/uploads\/_\/originals\/infuse\.png);
                        "
                      ></div>
                      <img
                        class="delay-0"
                        data-src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/infuse.png"
                        src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/infuse.png"
                        lazy="loaded"
                      />
                    </div>
                    <div class="macwk-app__body h-150">
                      <p class="macwk-app__body--version text-truncate">
                        <span
                          style="
                            display: -webkit-box;
                            -webkit-box-orient: vertical;
                            overflow: hidden;
                            word-break: break-all;
                            text-overflow: ellipsis;
                            -webkit-line-clamp: 1;
                          "
                          >7.3.4</span
                        >
                      </p>
                      <h5
                        class="macwk-app__body--title"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <span>Infuse Pro</span>
                        <span
                          class="
                            macwk-app__body--title--version
                            text-muted
                            fs-14
                          "
                          ><span class="mx-1">-</span>7.3.4</span
                        >
                      </h5>
                      <p
                        class="macwk-app__body--info"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <!---->
                        <span>超强全能视频播放器</span>
                        <!---->
                      </p>
                    </div>
                    <!---->
                    <div class="macwk-app__footer macwk-app__footer--margin">
                      <div class="macwk-app__footer--more">
                        <i class="light-icon-more icon-next-arrow"></i>
                      </div>
                    </div>
                  </a>
                </div>
                <div
                  class="list-animation-leftIn w-c w-c-4 delay-1"
                  style="
                    padding-left: 10px;
                    padding-right: 10px;
                    padding-bottom: 20px;
                  "
                >
                  <a
                    href="https://macwk.com/soft/movavi-video-converter-22"
                    target="_self"
                    class="macwk-app border white cursor-pointer mb-0"
                  >
                    <div class="macwk-app__header--icon">
                      <div
                        class="macwk-app__header--icon--content"
                        style="
                          --img: url(https\:\/\/macwk2022\.oss-cn-hongkong\.aliyuncs\.com\/public\/uploads\/_\/originals\/movavi-video-converter-21-premium\.png);
                        "
                      ></div>
                      <img
                        class="delay-1"
                        data-src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/movavi-video-converter-21-premium.png"
                        src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/movavi-video-converter-21-premium.png"
                        lazy="loaded"
                      />
                    </div>
                    <div class="macwk-app__body h-150">
                      <p class="macwk-app__body--version text-truncate">
                        <span
                          style="
                            display: -webkit-box;
                            -webkit-box-orient: vertical;
                            overflow: hidden;
                            word-break: break-all;
                            text-overflow: ellipsis;
                            -webkit-line-clamp: 1;
                          "
                          >22.2.1</span
                        >
                      </p>
                      <h5
                        class="macwk-app__body--title"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <span>Movavi Video Converter 22</span>
                        <span
                          class="
                            macwk-app__body--title--version
                            text-muted
                            fs-14
                          "
                          ><span class="mx-1">-</span>22.2.1</span
                        >
                      </h5>
                      <p
                        class="macwk-app__body--info"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <!---->
                        <span>最强视频格式转换压缩工具</span>
                        <!---->
                      </p>
                    </div>
                    <!---->
                    <div class="macwk-app__footer macwk-app__footer--margin">
                      <div class="macwk-app__footer--more">
                        <i class="light-icon-more icon-next-arrow"></i>
                      </div>
                    </div>
                  </a>
                </div>
                <div
                  class="list-animation-leftIn w-c w-c-4 delay-2"
                  style="
                    padding-left: 10px;
                    padding-right: 10px;
                    padding-bottom: 20px;
                  "
                >
                  <a
                    href="https://macwk.com/soft/app-cleaner-and-uninstaller-pro"
                    target="_self"
                    class="macwk-app border white cursor-pointer mb-0"
                  >
                    <div class="macwk-app__header--icon">
                      <div
                        class="macwk-app__header--icon--content"
                        style="
                          --img: url(https\:\/\/macwk2022\.oss-cn-hongkong\.aliyuncs\.com\/public\/uploads\/_\/originals\/app-cleaner-7\.png);
                        "
                      ></div>
                      <img
                        class="delay-2"
                        data-src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/app-cleaner-7.png"
                        src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/app-cleaner-7.png"
                        lazy="loaded"
                      />
                    </div>
                    <div class="macwk-app__body h-150">
                      <p class="macwk-app__body--version text-truncate">
                        <span
                          style="
                            display: -webkit-box;
                            -webkit-box-orient: vertical;
                            overflow: hidden;
                            word-break: break-all;
                            text-overflow: ellipsis;
                            -webkit-line-clamp: 1;
                          "
                          >Pro 7.5.1</span
                        >
                      </p>
                      <h5
                        class="macwk-app__body--title"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <span>App Cleaner &amp; Uninstaller</span>
                        <span
                          class="
                            macwk-app__body--title--version
                            text-muted
                            fs-14
                          "
                          ><span class="mx-1">-</span>Pro 7.5.1</span
                        >
                      </h5>
                      <p
                        class="macwk-app__body--info"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <!---->
                        <span>应用深度清理卸载工具</span>
                        <!---->
                      </p>
                    </div>
                    <!---->
                    <div class="macwk-app__footer macwk-app__footer--margin">
                      <div class="macwk-app__footer--more">
                        <i class="light-icon-more icon-next-arrow"></i>
                      </div>
                    </div>
                  </a>
                </div>
                <div
                  class="list-animation-leftIn w-c w-c-4 delay-3"
                  style="
                    padding-left: 10px;
                    padding-right: 10px;
                    padding-bottom: 20px;
                  "
                >
                  <a
                    href="https://macwk.com/soft/bartender-4"
                    target="_self"
                    class="macwk-app border white cursor-pointer mb-0"
                  >
                    <div class="macwk-app__header--icon">
                      <div
                        class="macwk-app__header--icon--content"
                        style="
                          --img: url(https\:\/\/macwk2022\.oss-cn-hongkong\.aliyuncs\.com\/public\/uploads\/_\/originals\/bartender-4\.png);
                        "
                      ></div>
                      <img
                        class="delay-3"
                        data-src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/bartender-4.png"
                        src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/bartender-4.png"
                        lazy="loaded"
                      />
                    </div>
                    <div class="macwk-app__body h-150">
                      <p class="macwk-app__body--version text-truncate">
                        <span
                          style="
                            display: -webkit-box;
                            -webkit-box-orient: vertical;
                            overflow: hidden;
                            word-break: break-all;
                            text-overflow: ellipsis;
                            -webkit-line-clamp: 1;
                          "
                          >4.1.32 Beta</span
                        >
                      </p>
                      <h5
                        class="macwk-app__body--title"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <span>Bartender 4</span>
                        <span
                          class="
                            macwk-app__body--title--version
                            text-muted
                            fs-14
                          "
                          ><span class="mx-1">-</span>4.1.32 Beta</span
                        >
                      </h5>
                      <p
                        class="macwk-app__body--info"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <!---->
                        <span>方便的管理菜单栏图标</span>
                        <!---->
                      </p>
                    </div>
                    <!---->
                    <div class="macwk-app__footer macwk-app__footer--margin">
                      <div class="macwk-app__footer--more">
                        <i class="light-icon-more icon-next-arrow"></i>
                      </div>
                    </div>
                  </a>
                </div>
                <div
                  class="list-animation-leftIn w-c w-c-4 delay-4"
                  style="
                    padding-left: 10px;
                    padding-right: 10px;
                    padding-bottom: 20px;
                  "
                >
                  <a
                    href="https://macwk.com/soft/capture-one-22"
                    target="_self"
                    class="macwk-app border white cursor-pointer mb-0"
                  >
                    <div class="macwk-app__header--icon">
                      <div
                        class="macwk-app__header--icon--content"
                        style="
                          --img: url(https\:\/\/macwk2022\.oss-cn-hongkong\.aliyuncs\.com\/public\/uploads\/_\/originals\/capture-one-20\.png);
                        "
                      ></div>
                      <img
                        class="delay-4"
                        data-src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/capture-one-20.png"
                        src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/capture-one-20.png"
                        lazy="loaded"
                      />
                    </div>
                    <div class="macwk-app__body h-150">
                      <p class="macwk-app__body--version text-truncate">
                        <span
                          style="
                            display: -webkit-box;
                            -webkit-box-orient: vertical;
                            overflow: hidden;
                            word-break: break-all;
                            text-overflow: ellipsis;
                            -webkit-line-clamp: 1;
                          "
                          >15.1.0.123</span
                        >
                      </p>
                      <h5
                        class="macwk-app__body--title"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <span>Capture One 22</span>
                        <span
                          class="
                            macwk-app__body--title--version
                            text-muted
                            fs-14
                          "
                          ><span class="mx-1">-</span>15.1.0.123</span
                        >
                      </h5>
                      <p
                        class="macwk-app__body--info"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <!---->
                        <span>专业级raw图像处理软件</span>
                        <!---->
                      </p>
                    </div>
                    <!---->
                    <div class="macwk-app__footer macwk-app__footer--margin">
                      <div class="macwk-app__footer--more">
                        <i class="light-icon-more icon-next-arrow"></i>
                      </div>
                    </div>
                  </a>
                </div>
                <div
                  class="list-animation-leftIn w-c w-c-4 delay-5"
                  style="
                    padding-left: 10px;
                    padding-right: 10px;
                    padding-bottom: 20px;
                  "
                >
                  <a
                    href="https://macwk.com/soft/art-text"
                    target="_self"
                    class="macwk-app border white cursor-pointer mb-0"
                  >
                    <div class="macwk-app__header--icon">
                      <div
                        class="macwk-app__header--icon--content"
                        style="
                          --img: url(https\:\/\/macwk2022\.oss-cn-hongkong\.aliyuncs\.com\/public\/uploads\/_\/originals\/art-text-4\.png);
                        "
                      ></div>
                      <img
                        class="delay-5"
                        data-src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/art-text-4.png"
                        src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/art-text-4.png"
                        lazy="loading"
                      />
                    </div>
                    <div class="macwk-app__body h-150">
                      <p class="macwk-app__body--version text-truncate">
                        <span
                          style="
                            display: -webkit-box;
                            -webkit-box-orient: vertical;
                            overflow: hidden;
                            word-break: break-all;
                            text-overflow: ellipsis;
                            -webkit-line-clamp: 1;
                          "
                          >4.1.2</span
                        >
                      </p>
                      <h5
                        class="macwk-app__body--title"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <span>Art Text</span>
                        <span
                          class="
                            macwk-app__body--title--version
                            text-muted
                            fs-14
                          "
                          ><span class="mx-1">-</span>4.1.2</span
                        >
                      </h5>
                      <p
                        class="macwk-app__body--info"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <!---->
                        <span>3D艺术字一键生成</span>
                        <!---->
                      </p>
                    </div>
                    <!---->
                    <div class="macwk-app__footer macwk-app__footer--margin">
                      <div class="macwk-app__footer--more">
                        <i class="light-icon-more icon-next-arrow"></i>
                      </div>
                    </div>
                  </a>
                </div>
                <div
                  class="list-animation-leftIn w-c w-c-4 delay-6"
                  style="
                    padding-left: 10px;
                    padding-right: 10px;
                    padding-bottom: 20px;
                  "
                >
                  <a
                    href="https://macwk.com/soft/progressive-downloader"
                    target="_self"
                    class="macwk-app border white cursor-pointer mb-0"
                  >
                    <div class="macwk-app__header--icon">
                      <div
                        class="macwk-app__header--icon--content"
                        style="
                          --img: url(https\:\/\/macwk2022\.oss-cn-hongkong\.aliyuncs\.com\/public\/uploads\/_\/originals\/progressive-downloader-1\.png);
                        "
                      ></div>
                      <img
                        class="delay-6"
                        data-src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/progressive-downloader-1.png"
                        src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/progressive-downloader-1.png"
                        lazy="loading"
                      />
                    </div>
                    <div class="macwk-app__body h-150">
                      <p class="macwk-app__body--version text-truncate">
                        <span
                          style="
                            display: -webkit-box;
                            -webkit-box-orient: vertical;
                            overflow: hidden;
                            word-break: break-all;
                            text-overflow: ellipsis;
                            -webkit-line-clamp: 1;
                          "
                          >5.1.38</span
                        >
                      </p>
                      <h5
                        class="macwk-app__body--title"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <span>Progressive Downloader</span>
                        <span
                          class="
                            macwk-app__body--title--version
                            text-muted
                            fs-14
                          "
                          ><span class="mx-1">-</span>5.1.38</span
                        >
                      </h5>
                      <p
                        class="macwk-app__body--info"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <!---->
                        <span>mac多线程下载器</span>
                        <!---->
                      </p>
                    </div>
                    <!---->
                    <div class="macwk-app__footer macwk-app__footer--margin">
                      <div class="macwk-app__footer--more">
                        <i class="light-icon-more icon-next-arrow"></i>
                      </div>
                    </div>
                  </a>
                </div>
                <div
                  class="list-animation-leftIn w-c w-c-4 delay-7"
                  style="
                    padding-left: 10px;
                    padding-right: 10px;
                    padding-bottom: 20px;
                  "
                >
                  <a
                    href="https://macwk.com/soft/xscope"
                    target="_self"
                    class="macwk-app border white cursor-pointer mb-0"
                  >
                    <div class="macwk-app__header--icon">
                      <div
                        class="macwk-app__header--icon--content"
                        style="
                          --img: url(https\:\/\/macwk2022\.oss-cn-hongkong\.aliyuncs\.com\/public\/uploads\/_\/originals\/xscope-bs\.png);
                        "
                      ></div>
                      <img
                        class="delay-7"
                        data-src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/xscope-bs.png"
                        src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/xscope-bs.png"
                        lazy="loading"
                      />
                    </div>
                    <div class="macwk-app__body h-150">
                      <p class="macwk-app__body--version text-truncate">
                        <span
                          style="
                            display: -webkit-box;
                            -webkit-box-orient: vertical;
                            overflow: hidden;
                            word-break: break-all;
                            text-overflow: ellipsis;
                            -webkit-line-clamp: 1;
                          "
                          >4.5.2</span
                        >
                      </p>
                      <h5
                        class="macwk-app__body--title"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <span>xScope</span>
                        <span
                          class="
                            macwk-app__body--title--version
                            text-muted
                            fs-14
                          "
                          ><span class="mx-1">-</span>4.5.2</span
                        >
                      </h5>
                      <p
                        class="macwk-app__body--info"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <!---->
                        <span>精确度量工具</span>
                        <!---->
                      </p>
                    </div>
                    <!---->
                    <div class="macwk-app__footer macwk-app__footer--margin">
                      <div class="macwk-app__footer--more">
                        <i class="light-icon-more icon-next-arrow"></i>
                      </div>
                    </div>
                  </a>
                </div>
                <div
                  class="list-animation-leftIn w-c w-c-4 delay-8"
                  style="
                    padding-left: 10px;
                    padding-right: 10px;
                    padding-bottom: 20px;
                  "
                >
                  <a
                    href="https://macwk.com/soft/obs-studio"
                    target="_self"
                    class="macwk-app border white cursor-pointer mb-0"
                  >
                    <div class="macwk-app__header--icon">
                      <div
                        class="macwk-app__header--icon--content"
                        style="
                          --img: url(https\:\/\/macwk2022\.oss-cn-hongkong\.aliyuncs\.com\/public\/uploads\/_\/originals\/obs-studio\.png);
                        "
                      ></div>
                      <img
                        class="delay-8"
                        data-src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/obs-studio.png"
                        src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/obs-studio.png"
                        lazy="loading"
                      />
                    </div>
                    <div class="macwk-app__body h-150">
                      <p class="macwk-app__body--version text-truncate">
                        <span
                          style="
                            display: -webkit-box;
                            -webkit-box-orient: vertical;
                            overflow: hidden;
                            word-break: break-all;
                            text-overflow: ellipsis;
                            -webkit-line-clamp: 1;
                          "
                          >27.2.0-rc1</span
                        >
                      </p>
                      <h5
                        class="macwk-app__body--title"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <span>OBS Studio</span>
                        <span
                          class="
                            macwk-app__body--title--version
                            text-muted
                            fs-14
                          "
                          ><span class="mx-1">-</span>27.2.0-rc1</span
                        >
                      </h5>
                      <p
                        class="macwk-app__body--info"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <span
                          class="el-tooltip d-inline-block mr-1 item"
                          aria-describedby="el-tooltip-8084"
                          tabindex="0"
                          ><i class="icon-github"></i
                        ></span>
                        <span>开源直播录像软件</span>
                        <!---->
                      </p>
                    </div>
                    <!---->
                    <div class="macwk-app__footer macwk-app__footer--margin">
                      <div class="macwk-app__footer--more">
                        <i class="light-icon-more icon-next-arrow"></i>
                      </div>
                    </div>
                  </a>
                </div>
                <div
                  class="list-animation-leftIn w-c w-c-4 delay-9"
                  style="
                    padding-left: 10px;
                    padding-right: 10px;
                    padding-bottom: 20px;
                  "
                >
                  <a
                    href="https://macwk.com/soft/mark-text"
                    target="_self"
                    class="macwk-app border white cursor-pointer mb-0"
                  >
                    <div class="macwk-app__header--icon">
                      <div
                        class="macwk-app__header--icon--content"
                        style="
                          --img: url(https\:\/\/macwk2022\.oss-cn-hongkong\.aliyuncs\.com\/public\/uploads\/_\/originals\/mark-text\.png);
                        "
                      ></div>
                      <img
                        class="delay-9"
                        data-src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/mark-text.png"
                        src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/mark-text.png"
                        lazy="loading"
                      />
                    </div>
                    <div class="macwk-app__body h-150">
                      <p class="macwk-app__body--version text-truncate">
                        <span
                          style="
                            display: -webkit-box;
                            -webkit-box-orient: vertical;
                            overflow: hidden;
                            word-break: break-all;
                            text-overflow: ellipsis;
                            -webkit-line-clamp: 1;
                          "
                          >0.17.0-rc.2</span
                        >
                      </p>
                      <h5
                        class="macwk-app__body--title"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <span>Mark Text</span>
                        <span
                          class="
                            macwk-app__body--title--version
                            text-muted
                            fs-14
                          "
                          ><span class="mx-1">-</span>0.17.0-rc.2</span
                        >
                      </h5>
                      <p
                        class="macwk-app__body--info"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <span
                          class="el-tooltip d-inline-block mr-1 item"
                          aria-describedby="el-tooltip-6811"
                          tabindex="0"
                          ><i class="icon-Open-Source"></i
                        ></span>
                        <span>好用的markdown编辑器</span>
                        <!---->
                      </p>
                    </div>
                    <!---->
                    <div class="macwk-app__footer macwk-app__footer--margin">
                      <div class="macwk-app__footer--more">
                        <i class="light-icon-more icon-next-arrow"></i>
                      </div>
                    </div>
                  </a>
                </div>
                <div
                  class="list-animation-leftIn w-c w-c-4 delay-10"
                  style="
                    padding-left: 10px;
                    padding-right: 10px;
                    padding-bottom: 20px;
                  "
                >
                  <a
                    href="https://macwk.com/soft/system-toolkit"
                    target="_self"
                    class="macwk-app border white cursor-pointer mb-0"
                  >
                    <div class="macwk-app__header--icon">
                      <div
                        class="macwk-app__header--icon--content"
                        style="
                          --img: url(https\:\/\/macwk2022\.oss-cn-hongkong\.aliyuncs\.com\/public\/uploads\/_\/originals\/system-toolkit-1\.png);
                        "
                      ></div>
                      <img
                        class="delay-10"
                        data-src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/system-toolkit-1.png"
                        src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/system-toolkit-1.png"
                        lazy="loading"
                      />
                    </div>
                    <div class="macwk-app__body h-150">
                      <p class="macwk-app__body--version text-truncate">
                        <span
                          style="
                            display: -webkit-box;
                            -webkit-box-orient: vertical;
                            overflow: hidden;
                            word-break: break-all;
                            text-overflow: ellipsis;
                            -webkit-line-clamp: 1;
                          "
                          >5.3.1</span
                        >
                      </p>
                      <h5
                        class="macwk-app__body--title"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <span>System Toolkit</span>
                        <span
                          class="
                            macwk-app__body--title--version
                            text-muted
                            fs-14
                          "
                          ><span class="mx-1">-</span>5.3.1</span
                        >
                      </h5>
                      <p
                        class="macwk-app__body--info"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <!---->
                        <span>系统维护工具箱</span>
                        <!---->
                      </p>
                    </div>
                    <!---->
                    <div class="macwk-app__footer macwk-app__footer--margin">
                      <div class="macwk-app__footer--more">
                        <i class="light-icon-more icon-next-arrow"></i>
                      </div>
                    </div>
                  </a>
                </div>
                <div
                  class="list-animation-leftIn w-c w-c-4 delay-11"
                  style="
                    padding-left: 10px;
                    padding-right: 10px;
                    padding-bottom: 20px;
                  "
                >
                  <a
                    href="https://macwk.com/soft/imap-builder"
                    target="_self"
                    class="macwk-app border white cursor-pointer mb-0"
                  >
                    <div class="macwk-app__header--icon">
                      <div
                        class="macwk-app__header--icon--content"
                        style="
                          --img: url(https\:\/\/macwk2022\.oss-cn-hongkong\.aliyuncs\.com\/public\/uploads\/_\/originals\/imap-builder\.png);
                        "
                      ></div>
                      <img
                        class="delay-11"
                        data-src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/imap-builder.png"
                        src="https://macwk2022.oss-cn-hongkong.aliyuncs.com/public/uploads/_/originals/imap-builder.png"
                        lazy="loading"
                      />
                    </div>
                    <div class="macwk-app__body h-150">
                      <p class="macwk-app__body--version text-truncate">
                        <span
                          style="
                            display: -webkit-box;
                            -webkit-box-orient: vertical;
                            overflow: hidden;
                            word-break: break-all;
                            text-overflow: ellipsis;
                            -webkit-line-clamp: 1;
                          "
                          >11.1.2</span
                        >
                      </p>
                      <h5
                        class="macwk-app__body--title"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <span>iMap Builder</span>
                        <span
                          class="
                            macwk-app__body--title--version
                            text-muted
                            fs-14
                          "
                          ><span class="mx-1">-</span>11.1.2</span
                        >
                      </h5>
                      <p
                        class="macwk-app__body--info"
                        style="
                          display: -webkit-box;
                          -webkit-box-orient: vertical;
                          overflow: hidden;
                          word-break: break-all;
                          text-overflow: ellipsis;
                          -webkit-line-clamp: 1;
                        "
                      >
                        <!---->
                        <!---->
                        <!---->
                        <span>支持任务的思维导‪图</span>
                        <!---->
                      </p>
                    </div>
                    <!---->
                    <div class="macwk-app__footer macwk-app__footer--margin">
                      <div class="macwk-app__footer--more">
                        <i class="light-icon-more icon-next-arrow"></i>
                      </div>
                    </div>
                  </a>
                </div>
              </div>
            </div>
            <div class="white dk py-7">
              <div class="container">
                <div class="d-flex app-content-header mb-6">
                  <div class="main-title">
                    <h4 class="i-con-h-a mb-0">
                      <i class="mr-1 text-muted i-con i-con-layer v-m-4"
                        ><i></i
                      ></i>
                      <span>教程文章</span>
                    </h4>
                  </div>
                  <nav class="nav nav-title flex-grow-1">
                    <a class="nav-link active">新鲜发布</a>
                    <a class="nav-link">站长推荐</a>
                    <a class="nav-link">最多评论</a>
                  </nav>
                  <div class="more-action">
                    <router-link
                  target="_self"
                  class="nav-link"
                  data-v-122eae44=""
                  to="post/all"
                  >
                      更多文章
                      <i class="icon-arrow-right fw-600 fs-12 v-2"></i
                    ></router-link
                >
                  </div>
                </div>
                <div class="row gap-a">

                  <div class="com-md-12 col-lg-6">
                    <a
                     v-for="(item, id) in this.leftArr" :key="id"
                   
                      href="https://macwk.com/article/jetbrains-crack"
                      class="
                        feature-block-three
                        border
                        white
                        dk
                        hover-shadow-6
                        delay-0
                        list-animation-leftIn
                      "
                    >
                      <div v-if="item.status.includes('published')" >
                      <router-link :target="istarget" :to="'/post/' + item.id">
                      <div class="d-flex align-items-center">
                    <div class="icon-box icon-one">
                           <img
                            v-if="item.thumb != null"
                             class="delayImg"
                            :src="item.thumb"
                            lazy="loading"
                          />
                          <div
                            v-else
                            class="delayImg"
                            :style="getStyles()"
                          >
                            <h3
                              class="flex text-center text-white opacity-50"
                            >
                              NOPIC
                            </h3>
                          </div>
                        </div>
                        <div class="text">
                          <h5
                            style="
                              display: -webkit-box;
                              -webkit-box-orient: vertical;
                              overflow: hidden;
                              word-break: break-all;
                              text-overflow: ellipsis;
                              -webkit-line-clamp: 2;
                            "
                          >
                            {{item.title}}
                          </h5>
                          <div class="text-muted fs-16 mr-3">

                                <span
                                  v-if="item.createTime != null"
                                  v-text="formatDate(item.createTime)"
                                >
                                </span>
                                <span
                                  v-else
                                  v-text="formatDate(item.addTime)"
                                >
                                </span>
                          </div>
                        </div>
                        <div
                          class="
                            read-more
                            d-flex
                            justify-content-end
                            w-80
                            pr-3
                          "
                        >
                          <i class="light-icon-more icon-next-arrow"></i>
                        </div>
                      </div>
                                              </router-link>
                      </div>
                    </a>
                  </div>
                  
                     
                  
                  <div class="com-md-12 col-lg-6">
                    <a
                    v-for="(item, id) in this.rightArr" :key="id"
                    
                      href="https://macwk.com/article/sipmac"
                      class="
                        feature-block-three
                        border
                        white
                        dk
                        hover-shadow-6
                        delay-5
                        list-animation-leftIn
                      "
                    >
                    <div v-if="item.status.includes('published')" >
                      <router-link :target="istarget" :to="'/post/' + item.id">
                      <div class="d-flex align-items-center">
                        <div class="icon-box icon-one">
                           <img
                            v-if="item.thumb != null"
                             class="delayImg"
                            :src="item.thumb"
                            lazy="loading"
                          />
                          <div
                            v-else
                            class="delayImg"
                            :style="getStyles()"
                          >
                            <h3
                              class="flex text-center text-white opacity-50"
                            >
                              NOPIC
                            </h3>
                          </div>
                        </div>
                        <div class="text">
                          <h5
                            style="
                              display: -webkit-box;
                              -webkit-box-orient: vertical;
                              overflow: hidden;
                              word-break: break-all;
                              text-overflow: ellipsis;
                              -webkit-line-clamp: 2;
                            "
                          >
                           {{item.title}}
                          </h5>
                          <div class="text-muted fs-16 mr-3">
                            
                                <span
                                  v-if="item.createTime != null"
                                  v-text="formatDate(item.createTime)"
                                >
                                </span>
                                <span
                                  v-else
                                  v-text="formatDate(item.addTime)"
                                >
                                </span>
                          </div>
                        </div>
                        <div
                          class="
                            read-more
                            d-flex
                            justify-content-end
                            w-80
                            pr-3
                          "
                        >
                          <i class="light-icon-more icon-next-arrow"></i>
                        </div>
                      </div>
                                              </router-link>
                      </div>
                    </a>
                  </div>
             
                  
                </div>
              </div>
            </div>
          </section>
          <div class="mobile-model">
            <div
              class="
                d-flex
                layout-min-full-height
                justify-content-center
                align-items-center
              "
            >
              <div class="text-center" style="width: 80%; margin: 0px auto">
                <h1 class="mb-4">哇，窗口太小啦</h1>
                <p class="mb-6">请调整浏览器窗口大小或者请使用手机查看！</p>
              </div>
            </div>
          </div>
        </div>
        <div
          class="macwk-footer white border-top pc-model"
          data-v-ea53b530=""
        >
          <div class="container" data-v-ea53b530="">
            <a
              href="https://macwk.com/"
              class="logo active"
              data-v-ea53b530=""
              aria-current="page"
            >
              <svg
                id="macwk-svg-logo"
                width="32"
                height="32"
                xmlns="http://www.w3.org/2000/svg"
                data-v-6dd0b122=""
                data-v-ea53b530=""
              >
                <title data-v-6dd0b122="">MacWK</title>
                <defs data-v-6dd0b122="">
                  <lineargradient
                    x1="50%"
                    y1="0%"
                    x2="50%"
                    y2="100%"
                    id="a"
                    data-v-6dd0b122=""
                  >
                    <stop
                      offset="0%"
                      class="stop-color-circle"
                      data-v-6dd0b122=""
                    ></stop>
                    <stop
                      offset="100%"
                      class="stop-color-circle"
                      data-v-6dd0b122=""
                    ></stop>
                  </lineargradient>
                  <lineargradient
                    x1="100%"
                    y1="86.198%"
                    x2="-14.813%"
                    y2="-4.357%"
                    id="b"
                    data-v-6dd0b122=""
                  >
                    <stop
                      offset="0%"
                      class="stop-color-default"
                      data-v-6dd0b122=""
                    ></stop>
                    <stop
                      offset="40.927%"
                      class="stop-color-default"
                      data-v-6dd0b122=""
                    ></stop>
                    <stop
                      offset="100%"
                      class="stop-color-default"
                      data-v-6dd0b122=""
                    ></stop>
                  </lineargradient>
                  <lineargradient
                    x1="86.515%"
                    y1="24.533%"
                    x2="0%"
                    y2="24.533%"
                    id="c"
                    data-v-6dd0b122=""
                  >
                    <stop
                      stop-opacity="0"
                      offset="0%"
                      class="stop-color-default"
                      data-v-6dd0b122=""
                    ></stop>
                    <stop
                      offset="100%"
                      class="stop-color-default-linearGradient"
                      data-v-6dd0b122=""
                    ></stop>
                  </lineargradient>
                </defs>
                <g fill="none" fill-rule="evenodd" data-v-6dd0b122="">
                  <path
                    d="M29.952 16c0-1.933-1.562-3.5-3.488-3.5a3.494 3.494 0 0 0-3.488 3.5c0 1.933 1.561 3.5 3.488 3.5a3.494 3.494 0 0 0 3.488-3.5"
                    fill="url(#a)"
                    data-v-6dd0b122=""
                  ></path>
                  <path
                    d="M25.865 25.9a13.932 13.932 0 0 1-6.377 3.66c-1.115.286-2.284.44-3.488.44a13.893 13.893 0 0 1-10.512-4.797A13.968 13.968 0 0 1 2.048 16c0-3.523 1.298-6.742 3.44-9.203A13.893 13.893 0 0 1 16 2c1.204 0 2.373.154 3.488.44a13.932 13.932 0 0 1 6.377 3.66l-4.933 4.95A6.942 6.942 0 0 0 16 9c-3.852 0-6.976 3.134-6.976 7l.002.18C9.122 19.964 12.208 23 16 23c1.926 0 3.67-.784 4.932-2.05l4.933 4.95z"
                    fill="url(#b)"
                    data-v-6dd0b122=""
                  ></path>
                  <path
                    d="M20.932 11.05A6.942 6.942 0 0 0 16 9c-3.852 0-6.976 3.134-6.976 7a13.98 13.98 0 0 1 4.087-9.9 13.932 13.932 0 0 1 6.377-3.66l1.444 8.61z"
                    fill="url(#c)"
                    data-v-6dd0b122=""
                  ></path>
                </g>
              </svg>
              <span class="ml-4" data-v-ea53b530="">MacWk</span></a
            >
            <div class="nav" data-v-ea53b530="">
              <a
                href="https://macwk.com/"
                class="nav-link active"
                data-v-ea53b530=""
                aria-current="page"
                >首页</a
              >
              <a
                href="https://macwk.com/about"
                class="nav-link"
                data-v-ea53b530=""
                >关于
              </a>
              <a
                href="https://macwk.com/contact"
                class="nav-link"
                data-v-ea53b530=""
                >联系
              </a>
              <a
                href="https://macwk.com/privacy"
                class="nav-link"
                data-v-ea53b530=""
                >隐私
              </a>
              <a
                href="https://macwk.com/version"
                class="nav-link"
                data-v-ea53b530=""
                >版本检测
              </a>
              <a
                href="https://macwk.com/changelogs"
                class="nav-link"
                data-v-ea53b530=""
                >更新日志
              </a>
            </div>
            <div class="copyright" data-v-ea53b530="">
              <p class="mb-0" data-v-ea53b530="">
                <span class="mr-3" data-v-ea53b530=""
                  ><a
                    href="https://beian.miit.gov.cn/"
                    target="_blank"
                    data-v-ea53b530=""
                    >鲁ICP备19036164号</a
                  ></span
                >
                <span data-v-ea53b530=""
                  >Macwk.com &copy; 2019. All rights reserved.</span
                >
              </p>
            </div>
          </div>
        </div>
        <div infos="0">
          <div
            class="
              adBanner
              pub_300x250 pub_300x250m pub_728x90
              text-ad
              textAd
              text_ad text_ads text-ads text-ad-links
            "
          ></div>
        </div>
      </div>
    </div>
  </div>
</div>
"},null]}